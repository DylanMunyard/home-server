apiVersion: v1
kind: ConfigMap
metadata:
  name: ha-proxy-cfg
  namespace: ha-proxy
data:
  haproxy.cfg: | 
    global
      tune.ssl.default-dh-param 2048
      log stdout format raw local0 debug
      
    defaults
      option forwardfor
      option http-server-close

    frontend prometheus
      bind :8405
      mode http
      http-request use-service prometheus-exporter
      no log

    frontend k3s  
      # Set the proxy mode to http (layer 7) or tcp (layer 4)
      log global
      mode http
      option  httplog
      option  dontlognull

      acl host_1942 req.hdr(host) -i 1942.munyard.dev
      acl host_staging_1942 req.hdr(host) -i staging-1942.munyard.dev
      acl path_api_backend path_beg /api
      acl path_player_api_backend path_beg /stats
      acl path_ai_backend path_beg /ai
      acl path_notifications path_beg /hub

      capture request header CF-Connecting-IP len 15
      
      log-format "%[capture.req.hdr(0)]\ %ci:%cp [%t] %ft %b/%s %Tq/%Tw/%Tc/%Tr/%Tt %ST %B %CC %CS %tsc %ac/%fc/%bc/%sc/%rc %sq/%bq %hr %hs %{+Q}r %sslv"
      
      # Receive traffic via HTTPs only
      bind *:8443 ssl crt /usr/local/etc/haproxy/certs/munyard-dev.pem

      http-request set-var(txn.origin) hdr(Origin)
      
      use_backend plex if { req.hdr(host) -i plex.munyard.dev }

      use_backend jellyfin if { req.hdr(host) -i jf.munyard.dev }
      
      use_backend sab if { req.hdr(host) -i sab.munyard.dev }
      
      use_backend bt if { req.hdr(host) -i bt.munyard.dev }
      
      use_backend sonarr if { req.hdr(host) -i sonarr.munyard.dev }
      
      use_backend radarr if { req.hdr(host) -i radarr.munyard.dev }
      
      use_backend pm if { req.hdr(host) -i pm.munyard.dev }
      
      use_backend grafana if { req.hdr(host) -i stats.munyard.dev }
      
      use_backend kubepromoperator if { req.hdr(host) -i kpm.munyard.dev }

      use_backend overseerr if { req.hdr(host) -i kitty.munyard.dev } 

      use_backend tautulli if { req.hdr(host) -i tautulli.munyard.dev } 

      use_backend jenkins if { req.hdr(host) -i jenkins.munyard.dev } 

      use_backend 1942apibackend if host_1942 path_api_backend
      use_backend 1942apibackend if host_staging_1942 path_api_backend
      use_backend 1942playerapibackend if host_1942 path_player_api_backend
      use_backend 1942playerapibackend if host_staging_1942 path_player_api_backend
      use_backend 1942aibackend if host_1942 path_ai_backend
      use_backend 1942aibackend if host_staging_1942 path_ai_backend
      use_backend 1942notifications if host_1942 path_notifications
      use_backend 1942notifications if host_staging_1942 path_notifications
      use_backend 1942 if host_1942
      use_backend staging1942 if host_staging_1942
      
      # deny by default
      default_backend no-match

    backend no-match
      mode http
      http-request deny deny_status 400

    backend plex
      mode http      
      server bethany 192.168.1.36:32400 check

    backend jellyfin
      mode http      
      server bethany 192.168.1.36:8096 check

    backend tautulli
      mode http      
      server bethany 192.168.1.36:8181 check

    backend jenkins
      mode http      
      server bethany jenkins-service.jenkins-ci:8080 check

    backend 1942
      mode http      
      server bethany bf42-servers-service.bf42-servers:80 check

    backend 1942apibackend
      mode http      
      server bethany bf42-servers-backend-service.bf42-servers:80 check

    backend 1942playerapibackend
      mode http      
      server bethany bf42-stats-service.bf42-stats:8080 check

    backend 1942aibackend
      mode http      
      server bethany bf42-servers-ai-backend.bf42-servers:80 check

    backend 1942notifications
      mode http      
      server bethany bf42-notifications-service.bf42-stats:8080 check

    backend staging1942
      mode http
      server bethany bf42-servers-feature-service.bf42-servers:80 check

    backend grafana
      mode http     
      server bethany 192.168.1.230:3000 check

    backend kubepromoperator
      mode http     
      server bethany kube-prometheus-stack-grafana.monitoring:80 check

    backend overseerr
      mode http     
      server bethany 192.168.1.225:5055 check

    backend sab
      mode http
      server iso 192.168.1.225:8080 check
      
    backend bt
      mode http  
      server iso 192.168.1.225:9091 check

    backend sonarr
      mode http        
      server iso 192.168.1.225:8989 check

    backend radarr
      mode http        
      server iso 192.168.1.225:7878 check

    backend pm
      mode http
      server iso 192.168.1.215:8006 ssl verify none
