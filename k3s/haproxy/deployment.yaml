---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ha-proxy
  namespace: ha-proxy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ha-proxy
  namespace: ha-proxy
spec:
  selector:
    matchLabels:
      app: ha-proxy
  replicas: 1
  template:
    metadata:
      labels:
        app: ha-proxy
        slowroll: "2"
    spec:
      nodeSelector:
        beta.kubernetes.io/arch: arm64
      serviceAccountName: ha-proxy
      initContainers:
        - name: init-cert
          image: busybox
          command: ['sh', '-c', 'cat /certs/tls.crt /certs/tls.key > /certs-output/munyard-dev.pem']
          volumeMounts:
          - name: tls-secret
            mountPath: /certs
          - name: certs-dir
            mountPath: /certs-output
      containers:
        - name: ha-proxy
          image: arm64v8/haproxy
          imagePullPolicy: Always
          volumeMounts:
            - name: certs-dir
              mountPath: /usr/local/etc/haproxy/certs
              readOnly: true
            - name: ha-proxy-cfg
              mountPath: "/usr/local/etc/haproxy"
      volumes:
        - name: tls-secret
          secret:
            secretName: munyard-dev-tls
        - name: ha-proxy-cfg
          configMap:
            name: ha-proxy-cfg
        - name: certs-dir
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: ha-proxy
  namespace: ha-proxy
spec:
  type: LoadBalancer
  ports:
    - port: 8443  
      name: https
      protocol: TCP
      targetPort: 8443
  selector:
    app: ha-proxy
---
apiVersion: v1
kind: Service
metadata:
  name: ha-proxy-metrics
  namespace: ha-proxy
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path:   /metrics
    prometheus.io/port:   '8405'
spec:
  selector:
    app: ha-proxy
  type: ClusterIP
  ports:
    - port: 8405
      targetPort: 8405
      name: metrics
      